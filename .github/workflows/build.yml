jobs:
  build:
    continue-on-error: false
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: v3-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          ~/.gradle/caches

          ~/.cache

          ~/work/pmd/target/repositories

          vendor/bundle

          # avoid caching missed dependencies

          !~/.m2/repository/**/*.lastUpdated

          '
        restore-keys: 'v3-${{ runner.os }}-

          '
    - continue-on-error: true
      name: Set up Ruby 3.3
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.3
    - continue-on-error: true
      name: Setup Environment
      run: 'echo "LANG=en_US.UTF-8" >> $GITHUB_ENV

        echo "MAVEN_OPTS=-Daether.connector.http.connectionMaxTtl=180 -DautoReleaseAfterClose=true
        -DstagingProgressTimeoutMinutes=30" >> $GITHUB_ENV

        echo "PMD_CI_SCRIPTS_URL=https://raw.githubusercontent.com/pmd/build-tools/25/scripts"
        >> $GITHUB_ENV

        '
      shell: bash
    - continue-on-error: true
      name: Check Environment
      run: 'f=check-environment.sh; \

        mkdir -p .ci && \

        ( [ -e .ci/$f ] || curl -sSL "${PMD_CI_SCRIPTS_URL}/$f" > ".ci/$f" ) && \

        chmod 755 .ci/$f && \

        .ci/$f

        '
      shell: bash
    - continue-on-error: true
      env:
        BUILD_CLI_DIST_ONLY: ${{ inputs.build_cli_dist_only }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PMD_CI_SECRET_PASSPHRASE: ${{ secrets.PMD_CI_SECRET_PASSPHRASE }}
      name: Build
      run: .ci/build.sh
      shell: bash
    - continue-on-error: true
      name: Workaround actions/upload-artifact#176
      run: 'echo "artifacts_path=$(realpath ..)" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Upload regression tester report
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: ignore
        name: pmd-regression-tester
        path: ${{ env.artifacts_path }}/target/pr-*-diff-report-*.tar.gz
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        - macos-latest
name: build
on:
  repository_dispatch:
    types: trigger-ga___build.yml
permissions:
  contents: read
